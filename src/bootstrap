#!/bin/bash

## FUNCTIONS ##
shutdown_hooks=()

function atexit() {
    val=$(echo "$@")
    shutdown_hooks+=("$val")
}

function log() { 
    echo "$@"
    cat << EOF | logger --journald
MESSAGE_ID=8675f7ada3f4452088c1f37b54b76411
MESSAGE=$@
EOF
}

function fatal() {
    exit_code=$1
    shift
    log "$@"
    exit $exit_code
}

function shutdown() {
    log "Running shutdown hooks..."
    for ((i=${#shutdown_hooks[0]}-1; i >=0 ; i--)); do
        if [ ! -z "${shutdown_hooks[$i]}" ]; then
            log "${shutdown_hooks[$i]}"
        fi
        eval "${shutdown_hooks[$i]}"
    done
}

# Exit if the supplied value is empty
function exit_if_empty() {
    if [ -z "$1" ]; then
        log "$1 is required! Exiting with failure."
        exit 1
    fi    
}

trap "echo Ignoring SIGHUP" HUP
trap "shutdown ; exit 1" INT TERM EXIT

log "Parsing command line"
if [ $# -eq 0 ]; then
    log "No command line arguments passed, using /proc/cmdline"
    args=( $( cat /proc/cmdline | sed 's/ /\n/g' | grep -P '^bootstrap' | sort ) )
else
    args=("$@")
fi

for envvar in "${args[@]}"; do
    export $envvar
done

target_device=${target_device:-/dev/sda}

log "Partitioning /dev/sda"
sgdisk -o -n 1:0:+1M -n 2:0:0 -t 1:ef02 -t 2:8300 -c 1:"grub" ${target_device} || \
    fatal 1 "Partitioning failed."

log "Reload partition tables..."
blockdev --rereadpt "${target_device}" || fatal 1 "Could not re-read partition tables."

root_uuid=$(blkid -o value -s UUID "${target_device}2")

log "Creating root filesystem"
# TODO: replace with ZFS
mkfs.ext4 ${target_device}2 || fatal 1 "Could not create root filesystem."

log "Mounting root filesystem"
mount ${target_device}2 /sysroot || fatal 1 "Could not mount new root filesystem."

# Set bootstrap root password if requested.
if [ ! -z "${bootstrap_root_password}" ]; then
    log "Copying initial root credentials..."
    echo "root:$bootstrap_root_password" | chpasswd || fatal 1 "Could not set bootstrap root password."
fi

# Bootstrap root key is not optional.
mkdir -p /root/.ssh || fatal 1 "Could not create root .ssh dir"
chmod 755 /root/.ssh || fatal 1 "Could not set ownership on root .ssh dir"
( echo "$bootstrap_root_key" | base64 -d > /root/.ssh/authorized_keys ) || fatal 1 "Failed decording bootstrap root key."

log "Copying bootstrap initramfs to root..."
rsync -W -a -x --human-readable / /sysroot/ 2>&1 || fatal 1 "Failed copying OS to /sysroot"

log "Writing /etc/fstab ..."
# TODO: fix this if we change root partitioning above
echo "UUID=${root_uuid}     /   ext4    defaults,noatime    0   0" > /sysroot/etc/fstab

log "Converting initrd to os..."
mv /sysroot/etc/initrd-release /sysroot/etc/os-release || fatal 1 "Failed moving initrd-release to os-release"

log "Making machine-id permanent..."
systemd-machine-id-setup --commit --root=/sysroot || fatal 1 "Could not set machine-id on new root."

log "Installing grub to boot disk..."
grub-install --root=/sysroot ${target_device} || fatal 1 "grub-install failed."

mount --bind /dev /sysroot/dev
mount --bind /sys /sysroot/sys
mount --bind /proc /sysroot/proc

chroot /sysroot /usr/sbin/update-grub

umount /sysroot/dev
umount /sysroot/sys
umount /sysroot/proc

log "Cleaning up bootstrap specific files on root..."
source /bootstrap_cleanup

trap - INT TERM EXIT
shutdown

log "Exiting successfully."
exit 0
